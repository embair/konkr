{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Action",
				"ActionsProvider"
			],
			[
				"scheduled",
				"scheduledByCurrentAction"
			],
			[
				"schedul",
				"scheduledByCurrentAction"
			],
			[
				"requi",
				"requiresSorting"
			],
			[
				"w",
				"waitingFor"
			],
			[
				"onBefo",
				"onBeforeStateChange"
			],
			[
				"currentS",
				"currentStateIndex"
			],
			[
				"overlay",
				"overlayDefinition"
			],
			[
				"tile",
				"tileSelectionProxy"
			],
			[
				"sprite",
				"spritesheets"
			],
			[
				"tobE",
				"toBeGreaterThan"
			],
			[
				"add",
				"addUntilFull"
			],
			[
				"set",
				"setVisible"
			],
			[
				"token",
				"token-agent-jump"
			],
			[
				"_update",
				"_updatePositionsScheduled"
			],
			[
				"collide",
				"collidesWithPlayer"
			],
			[
				"WOR",
				"WORLD_SHIFT_EASING"
			],
			[
				"dist",
				"distanceTraveled"
			],
			[
				"get",
				"getThreat"
			],
			[
				"lbl",
				"lblLifes"
			],
			[
				"on",
				"onLoadingProgress"
			],
			[
				"dic",
				"dictionaryReady"
			],
			[
				"cu",
				"currentTile"
			],
			[
				"object",
				"objectSpawner"
			],
			[
				"destroy",
				"destroyTokenFromTray"
			],
			[
				"toBe",
				"toBeGreaterThan"
			],
			[
				"startin",
				"startingTile"
			],
			[
				"proto",
				"prototype"
			],
			[
				"player",
				"playerCharacterOffset"
			],
			[
				"character",
				"playerCharacterOffset"
			],
			[
				"Tok",
				"TokenState"
			],
			[
				"que",
				"queuedTokens"
			],
			[
				"incom",
				"incomingTokens"
			],
			[
				"pro",
				"prototype"
			],
			[
				"generate",
				"generateToken"
			]
		]
	},
	"buffers":
	[
		{
			"file": "webpack.config.js",
			"settings":
			{
				"buffer_size": 1762,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import ActionsProvider from 'lib/ActionsProvider';\n\nfunction Actions(spec) {\n    return new ActionsProvider(spec, \"Actions\", [\n\n        // Handled by GameFlow\n        'START_NEW_GAME',\n        'START_NEW_TURN',\n        'CHECK_VICTORY_CONDITIONS',\n\n        // PLAYER ACTIONS\n        'CONQUER_HEX', // (hex, region, pawn)\n        'BUY_UNIT' , // (unitType, hex)\n\n        // Handled by HexGrid\n        'RESET_HEXGRID' ,\n\n        // Handled by WorldGenerator\n        'GENERATE_LANDMASS', // (width, height)\n\n        // Handled by Regions\n        'CHANGE_HEXES_REGION', // (hexes, region)\n        'RANDOMIZE_REGIONS',\n        'CHANGE_REGION_CAPITAL', // (region, hex, previousHex)\n\n        // Handled by Economy\n        'UPDATE_ECONOMY' , // (player)\n        'SET_INITIAL_TREASURY' , // ... reset treasury for all region in the world to an initial value based on size\n        'SET_REGION_TREASURY' ,\n        'CHANGE_REGION_TREASURY' , // (region, amount)\n\n        // Handled by Pawns\n        'CREATE_PAWN' , // (pawnType, hex)\n        'DESTROY_PAWN' , // (pawn)\n        'MOVE_PAWN' , // (pawn, hex)\n        'KILL_TROOPS_IN_REGION', // (region)\n\n        // Handled by Players\n        'PLAYER_ACT' , // (player)\n    ]);\n}\n\nexport default Actions;",
			"file": "src/rules/Actions.js",
			"file_size": 9008,
			"file_write_time": 131258878614231670,
			"settings":
			{
				"buffer_size": 1239,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n\nfunction RegionAI(spec, region) {\n    let availableUnits = [];\n    let availableHexes = [];\n\n    let aiMethods = new ActionsProvider(spec, 'Actions', [\n        'FIND_OPPORTUNITIES',\n        'ATTACK'\n    ]);\n\n    return Object.freeze({\n        play\n    });\n\n    function play() {\n        log.debug(`Evaluating region ${region}`);\n        //return buyUnits().then(refreshAvailUnits).then(attack);\n\n    }            \n\n    function refreshAvailUnits() {\n        return new Promise(resolve => {\n            availableUnits = pawns.select({\n                hexes:region.hexes,\n                type:PawnType.TROOP_1\n            });\n            resolve();\n        });\n    }\n\n    function attack() {\n        return new Promise(resolve=>{\n            if (!availableUnits.length) return resolve();\n            //TODO dont recalculate on every call\n            availableHexes = region.hexes.neighbours().filter(hex => warfare.defenseOf(hex) === 0);\n            if (!availableHexes.length) return resolve();\n            actions.schedule('CONQUER_HEX', availableHexes.getRandomHex(), region, availableUnits.shift());\n                   //.then(attack) //nice, now try to attack some more\n                   //.then(resolve);\n            resolve();\n        });\n    }\n\n    function buyUnits() {\n        return new Promise(resolve=>{\n            if (economy.treasuryOf(region) > 10 && economy.netIncomeOf(region)+economy.treasuryOf(region)/10 > 2) {\n                log.debug(`Buying new unit on ${region} (${economy.treasuryOf(region)} gold left)`);\n                const targetHex = region.hexes.filter(hex => !pawns.pawnAt(hex)).getRandomHex();\n                if (!targetHex) return resolve();\n                actions.schedule('BUY_UNIT', PawnType.TROOP_1, targetHex);\n                    //.then(buyUnits) //try to buy another unit\n                    //.then(resolve);\n                resolve();\n            } else {\n                resolve();\n            }\n        });\n    }\n}\n\n\n/*\nfunction AI(spec) {\n    return new ActionsProvider(spec, \"AI\", {\n\n    });\n}*/",
			"file": "src/ai/RegionAI.js",
			"file_size": 24,
			"file_write_time": 131259115655242449,
			"settings":
			{
				"buffer_size": 2050,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "class BasicAI {"
			}
		},
		{
			"file": "src/lib/hexgrid/HexGrid.js",
			"settings":
			{
				"buffer_size": 5982,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/lib/hexgrid/HexValuation.js",
			"settings":
			{
				"buffer_size": 1224,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "spec/support/jasmine.json",
			"settings":
			{
				"buffer_size": 221,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "module.exports = function (config) {\n  config.set({\n    autoWatch: true,\n    browsers: ['PhantomJS'],\n    files: [\n      'src/*_spec.js'\n    ],\n    frameworks: [\n      'jasmine',\n      'sinon'\n    ],\n    reporters: ['spec', 'coverage'],\n    preprocessors: {\n      'src/*_spec.js': [ 'webpack', 'coverage' ]\n    },\n    webpack: {\n      module: {\n        loaders: [\n          {\n            test: /\\.js/,\n            include: /src/,\n            loader: 'babel',\n            query: {\n              plugins: [ 'transform-runtime' ],\n              presets: [ 'es2015' ]\n            }\n          }\n        ]\n      },\n      cache: true,\n      resolve: {\n        extensions: ['', '.js'],\n        modulesDirectories: ['node_modules']\n      }\n    },\n    webpackServer: {\n      noInfo: true\n    },\n    coverageReporter: {\n      reporters: [\n        { type: 'lcovonly', subdir: '.', file: 'lcov.info' }\n      ]\n    }\n  })\n}\n",
			"file": "/C/Users/Embair/dev/www/tmp/es6-client-boilerplate/karma.config.js",
			"file_size": 955,
			"file_write_time": 131259185390448462,
			"settings":
			{
				"buffer_size": 910,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "var path = require('path')\n\nmodule.exports = {\n  entry: {\n    app: [ './src/main.js' ]\n  },\n  output: {\n    path: path.join(__dirname, 'dist'),\n    filename: '[name].js',\n    chunkFilename: '[id].js'\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.js/,\n        include: /src/,\n        loader: 'babel',\n        query: {\n          plugins: [ 'transform-runtime' ],\n          presets: [ 'es2015' ]\n        }\n      }\n    ]\n  },\n  resolve: {\n    extensions: ['', '.js'],\n    moduleDirectories: ['node_modules']\n  },\n  plugins: []\n}\n",
			"file": "/C/Users/Embair/dev/www/tmp/es6-client-boilerplate/webpack.config.js",
			"file_size": 566,
			"file_write_time": 131259185390683491,
			"settings":
			{
				"buffer_size": 536,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "{\n  \"name\": \"es6-client-boilerplate\",\n  \"version\": \"0.0.3\",\n  \"description\": \"starting point for client-side es6 projects\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"lint\": \"standard\",\n    \"pretest\": \"npm run lint\",\n    \"test\": \"karma start ./karma.config.js --single-run\",\n    \"watch\": \"karma start ./karma.config.js\",\n    \"build\": \"webpack --config webpack.production.config.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/rjz/es6-client-boilerplate\"\n  },\n  \"keywords\": [],\n  \"author\": \"RJ Zaworski <rj@rjzaworski.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/rjz/es6-client-boilerplate/issues\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"6.3.13\",\n    \"babel-loader\": \"6.2.0\",\n    \"babel-plugin-transform-runtime\": \"6.3.13\",\n    \"babel-preset-es2015\": \"6.3.13\",\n    \"babel-runtime\": \"6.3.13\",\n    \"jasmine\": \"2.3.1\",\n    \"jasmine-core\": \"2.3.0\",\n    \"karma\": \"0.13.15\",\n    \"karma-babel-preprocessor\": \"6.0.1\",\n    \"karma-coverage\": \"0.5.2\",\n    \"karma-es6-shim\": \"0.1.3\",\n    \"karma-jasmine\": \"0.3.6\",\n    \"karma-phantomjs-launcher\": \"0.2.1\",\n    \"karma-sinon\": \"1.0.4\",\n    \"karma-spec-reporter\": \"0.0.20\",\n    \"karma-webpack\": \"1.7.0\",\n    \"object-assign\": \"3.0.0\",\n    \"phantomjs\": \"1.9.17\",\n    \"sinon\": \"1.14.1\",\n    \"standard\": \"5.3.1\",\n    \"webpack\": \"1.12.9\"\n  }\n}\n",
			"file": "/C/Users/Embair/dev/www/tmp/es6-client-boilerplate/package.json",
			"file_size": 1378,
			"file_write_time": 131259185390498471,
			"settings":
			{
				"buffer_size": 1332,
				"line_ending": "Windows"
			}
		},
		{
			"file": "spec/HexValuation.spec.js",
			"settings":
			{
				"buffer_size": 1575,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "Valuations"
			}
		},
		{
			"file": "src/ai/methods/getAttackOpportunities.js",
			"settings":
			{
				"buffer_size": 326,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "function rankAttackOpportunities(action) {"
			}
		},
		{
			"file": "src/ai/methods/offensivePlay.js",
			"settings":
			{
				"buffer_size": 98,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/lib/util.js",
			"settings":
			{
				"buffer_size": 5607,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 962,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "static/index.html",
			"settings":
			{
				"buffer_size": 471,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/index.js",
			"settings":
			{
				"buffer_size": 5294,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/lib/ActionsProvider.js",
			"settings":
			{
				"buffer_size": 7627,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import IterableOn from 'lib/decorators/IterableOn';\nimport { PawnType } from 'rules/Pawns';\nimport async from 'async';\n\nfunction Players(spec) {\n\n    let { actions, log, economy, pawns, regions, warfare } = spec;\n\n    class Player {\n        constructor(name) {\n            this.name = name;\n        }\n\n        get controlledRegions() {\n            return getRegionsControlledBy(this);\n        }\n\n        play(callback) {\n            callback();\n        }\n\n        toString() {\n            return `[Player ${this.name}]`;\n        }\n    }\n\n    class GlobalRegionAI extends Player {\n        constructor() {\n            super(\"GlobalRegionAI\");\n        }\n\n        play(callback) {\n            getRegionsControlledBy(this).reduce((prevPromise, region) => {\n                return prevPromise.then(this.RegionAI(region).play);\n            },Promise.resolve())\n            .then(callback);\n        }\n\n        RegionAI(region) {\n            let availableUnits = [];\n            let availableHexes = [];\n\n            return Object.freeze({\n                play\n            });\n\n            function play() {\n                log.debug(`Evaluating region ${region}`);\n                //return buyUnits().then(refreshAvailUnits).then(attack);\n                return new Promise(resolve=>resolve());\n            }            \n\n            function refreshAvailUnits() {\n                return new Promise(resolve => {\n                    availableUnits = pawns.select({\n                        hexes:region.hexes,\n                        type:PawnType.TROOP_1\n                    });\n                    resolve();\n                });\n            }\n\n            function attack() {\n                return new Promise(resolve=>{\n                    if (!availableUnits.length) return resolve();\n                    //TODO dont recalculate on every call\n                    availableHexes = region.hexes.neighbours().filter(hex => warfare.defenseOf(hex) === 0);\n                    if (!availableHexes.length) return resolve();\n                    actions.schedule('CONQUER_HEX', availableHexes.getRandomHex(), region, availableUnits.shift());\n                           //.then(attack) //nice, now try to attack some more\n                           //.then(resolve);\n                    resolve();\n                });\n            }\n\n            function buyUnits() {\n                return new Promise(resolve=>{\n                    if (economy.treasuryOf(region) > 10 && economy.netIncomeOf(region)+economy.treasuryOf(region)/10 > 2) {\n                        log.debug(`Buying new unit on ${region} (${economy.treasuryOf(region)} gold left)`);\n                        const targetHex = region.hexes.filter(hex => !pawns.pawnAt(hex)).getRandomHex();\n                        if (!targetHex) return resolve();\n                        actions.schedule('BUY_UNIT', PawnType.TROOP_1, targetHex);\n                            //.then(buyUnits) //try to buy another unit\n                            //.then(resolve);\n                        resolve();\n                    } else {\n                        resolve();\n                    }\n                });\n            }\n\n        }\n\n\n    }\n\n    const _players = [new GlobalRegionAI()];\n    \n    // public API\n    let self = {};\n    IterableOn(self, _players);\n\n    actions.setHandler('PLAYER_ACT', (action, player) => {\n        ai.schedule('');\n        player.play(action.resolve);\n    });\n\n    function getRegionsControlledBy(player) {\n        //TODO less bullshit, more actual implementation\n        let list = [];\n        regions.forEach(r=>{if(r.hasCapital()) list.push(r); });\n        return list;\n    }\n\n    return Object.freeze(self);\n}\n\nexport default Players;",
			"file": "src/rules/Players.js",
			"file_size": 3789,
			"file_write_time": 131258763062502513,
			"settings":
			{
				"buffer_size": 3698,
				"line_ending": "Windows"
			}
		},
		{
			"file": ".jshintrc",
			"settings":
			{
				"buffer_size": 622,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"linter all ",
				"SublimeLinter: Show All Errors"
			],
			[
				"linter",
				"SublimeLinter: Lint This View"
			],
			[
				"sublimelin",
				"SublimeLinter: Toggle Linter"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"Remove",
				"Package Control: Remove Package"
			],
			[
				"SublimeLinter",
				"SublimeLinter: Toggle Linter"
			],
			[
				"Upgr",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"Package Control: up",
				"Package Control: Upgrade Package"
			],
			[
				"sublimelinter",
				"SublimeLinter: Toggle Linter"
			],
			[
				"sublim",
				"SublimeLinter: Toggle Linter"
			],
			[
				"toggle linter",
				"SublimeLinter: Toggle Linter"
			],
			[
				"sublimelinter:",
				"SublimeLinter: Toggle Linter"
			],
			[
				"linter:",
				"SublimeLinter: Lint This View"
			],
			[
				"linters",
				"SublimeLinter: Show All Errors"
			],
			[
				"SublimeLin",
				"SublimeLinter: Choose Mark Style"
			],
			[
				"SublimeLinter Choo",
				"SublimeLinter: Choose Mark Style"
			],
			[
				"linter settin",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"jshint",
				"JSHint"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"Babel",
				"Preferences: Babel – Default"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"linter ",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"lineter",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"enable",
				"SublimeLinter: Enable Linting"
			],
			[
				"settings ",
				"Preferences: Settings"
			],
			[
				"linter:di",
				"SublimeLinter: Disable Linting"
			],
			[
				"linter:enabl",
				"SublimeLinter: Enable Linting"
			],
			[
				"linter:disab",
				"SublimeLinter: Disable Linting"
			],
			[
				"jshin",
				"JSHint"
			],
			[
				"install packa",
				"Package Control: Install Package"
			],
			[
				"linter: ena",
				"SublimeLinter: Enable Linter"
			],
			[
				"linter: disabl",
				"SublimeLinter: Disable Linter"
			],
			[
				"preference",
				"Preferences: Settings - Default"
			],
			[
				"linter cle",
				"SublimeLinter: Clear Caches"
			],
			[
				"prefs lin",
				"Preferences: SublimeLinter Settings – User"
			],
			[
				"lin",
				"SublimeLinter: Next Error"
			],
			[
				"linter lint",
				"SublimeLinter: Toggle Linter"
			],
			[
				"Linter",
				"SublimeLinter: Lint This View"
			],
			[
				"Install P",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Add Channel"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"package ",
				"Preferences: Browse Packages"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 200.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Embair/dev/www/konkr/src",
		"/C/Users/Embair/dev/www/konkr/src/ai",
		"/C/Users/Embair/dev/www/konkr/src/ai/methods",
		"/C/Users/Embair/dev/www/konkr/src/lib",
		"/C/Users/Embair/dev/www/konkr/src/lib/hexgrid",
		"/C/Users/Embair/dev/www/konkr/static",
		"/C/Users/Embair/dev/www/konkr/spec"
	],
	"file_history":
	[
		"/C/Users/Embair/dev/www/konkr/src/ai/AI.js",
		"/C/Users/Embair/dev/www/konkr/src/ai/methods/HexValuation.js",
		"/C/Users/Embair/dev/www/konkr/src/ai/methods/offensivePlay.js",
		"/C/Users/Embair/dev/www/tmp/phaser-es6-webpack/webpack.config.js",
		"/C/Users/Embair/dev/www/konkr/webpack.production.config.js",
		"/C/Users/Embair/dev/www/konkr/webpack.config.js",
		"/C/Users/Embair/dev/www/konkr/dist/bundle.js",
		"/C/Users/Embair/dev/www/konkr/src/devel.html",
		"/C/Users/Embair/dev/www/konkr/src/ui/HexSelectionProxy.js",
		"/C/Users/Embair/dev/www/konkr/src/ui/UIManager.js",
		"/C/Users/Embair/dev/www/konkr/src/rules/GameDirector.js",
		"/C/Users/Embair/dev/www/konkr/src/lib/AssetManager.js",
		"/C/Users/Embair/dev/www/konkr/src/rules/LandGenerator.js",
		"/C/Users/Embair/dev/www/konkr/src/rules/Pawns.js",
		"/C/Users/Embair/dev/www/konkr/src/lib/decorators/IterableOn.js",
		"/C/Users/Embair/dev/www/konkr/src/states/Play.js",
		"/C/Users/Embair/dev/www/konkr/gulpfile.js",
		"/C/Users/Embair/dev/www/konkr/static/index.html",
		"/C/Users/Embair/dev/www/konkr/package.json",
		"/C/Users/Embair/dev/www/konkr/src/index.js",
		"/C/Users/Embair/dev/www/konkr/src/rules/Players.js",
		"/C/Users/Embair/dev/www/konkr/src/rules/Regions.js",
		"/C/Users/Embair/dev/www/konkr/src/rules/Economy.js",
		"/C/Users/Embair/dev/www/konkr/src/ui/RegionPanel.js",
		"/C/Users/Embair/dev/www/konkr/src/ui/GridOverlays.js",
		"/C/Users/Embair/dev/www/konkr/src/lib/hexgrid/HexGrid.js",
		"/C/Users/Embair/dev/www/konkr/build/scripts/game.js",
		"/C/Users/Embair/dev/www/angrywords/js/angrywords.js",
		"/C/Users/Embair/dev/www/konkr/src/lib/Injector.js",
		"/C/Users/Embair/dev/www/konkr/src/ui/Renderer.js",
		"/C/Users/Embair/dev/www/konkr/src/rules/Actions.js",
		"/C/Users/Embair/dev/www/konkr/src/lib/hexgrid/Hexagon.js",
		"/C/Users/Embair/dev/www/konkr/konkr.sublime-project",
		"/C/Program Files/Git/mingw64/share/doc/git-doc/git-push.html",
		"/C/Program Files/Git/mingw64/share/doc/git-doc/git-config.html",
		"/C/Program Files/Git/mingw64/share/doc/git-doc/git-clone.html",
		"/C/Users/Embair/dev/www/konkr/src/lib/HexGrid.js",
		"/C/Users/Embair/dev/www/konkr/static/styles/main.css",
		"/C/Users/Embair/dev/www/konkr/src/lib/util.js",
		"/C/Users/Embair/dev/www/konkr/src/ui/Scrolling.js",
		"/C/Users/Embair/dev/www/konkr/src/rules/WorldGenerator.js",
		"/C/Users/Embair/dev/www/konkr/src/lib/controls/UI.js",
		"/C/Users/Embair/dev/www/konkr/src/rules/Warfare.js",
		"/C/Users/Embair/dev/www/angrywords/js/lib/Tokens.js",
		"/C/Users/Embair/dev/www/angrywords/index.html",
		"/C/Users/Embair/dev/www/konkr/.gitignore",
		"/C/Users/Embair/dev/www/konkr/src/lib/WorldGenerator.js",
		"/C/Users/Embair/dev/www/konkr/src/lib/LandTile.js",
		"/C/Users/Embair/dev/www/konkr/src/.jshintrc",
		"/C/Users/Embair/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Embair/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Embair/dev/www/konkr/src/lib/ui/TileSelectionProxy.js",
		"/C/Users/Embair/dev/www/konkr/src/lib/Renderer.js",
		"/C/Users/Embair/dev/www/angrywords/js/lib/AssetManager.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/SearchBox.js",
		"/C/Users/Embair/dev/www/angrywords/js/lib/Const.js",
		"/C/Users/Embair/dev/www/hexwar/phaser-es6-boilerplate/gulpfile.js",
		"/C/Users/Embair/dev/www/hexwar/phaser-es6-boilerplate/static/index.html",
		"/C/Users/Embair/dev/www/hexwar/phaser-es6-boilerplate/src/konkr.js",
		"/C/Users/Embair/dev/www/hexwar/phaser-es6-boilerplate/src/index.js",
		"/C/Users/Embair/dev/www/konkr/js/konkr.js",
		"/C/Users/Embair/dev/www/hexwar/phaser-es6-boilerplate/package.json",
		"/C/Users/Embair/dev/www/konkr/js/lib/HexGrid.js",
		"/C/Users/Embair/dev/www/konkr/index.html",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/index.js",
		"/C/Users/Embair/dev/www/practice/trackerApp/trackerapp/server.js",
		"/C/Users/Embair/dev/www/hexwar/phaser-es6-boilerplate/src/states/GameState.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/package.json",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/SortableTable.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/FilterEditor.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/Stats.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/model/Filter.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/model/Tweet.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/__snapshots__/App.test.js.snap",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/App.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/server/server.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/README.md",
		"/C/Users/Embair/dev/www/practice/trackerApp/package.json",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/reducers/index.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/actions/index.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/App.test.js",
		"/C/Users/Embair/dev/www/practice/trackerApp/trackerapp/http-listener.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/index.css",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/Tweet.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/filters.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/reducers/model/Filter.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/reducers/model/Tweet.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/reducers/model/filters.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/reducers/app.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/actions/fetchTweets.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/TweetsTable.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/globals.js",
		"/C/Users/Embair/dev/www/practice/tmp/public/index.html",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/filters.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/FilterEditor",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/components/Filters.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/node_modules/assert/assert.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/SearchBox.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/App.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/App.css",
		"/C/Users/Embair/AppData/Roaming/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/C/Users/Embair/dev/www/practice/twitterapp/node_modules/react-scripts/scripts/start.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/node_modules/react-scripts/config/webpack.config.dev.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/node_modules/react-scripts/package.json",
		"/C/Users/Embair/dev/www/practice/twitterapp/src/App.test.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/public/index.html",
		"/C/Users/Embair/dev/www/practice/trackerApp/http-listener.js",
		"/C/Users/Embair/dev/www/practice/trackerApp/server.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/server.js",
		"/C/Users/Embair/dev/www/practice/twitterapp/scripts/start.js",
		"/C/Users/Embair/AppData/Roaming/Sublime Text 3/Packages/Babel/Babel.sublime-settings",
		"/C/Users/Embair/dev/www/practice/twitterapp/.eslint",
		"/C/Users/Embair/dev/www/practice/trackerApp/trackerapp/package.json",
		"/C/Users/Embair/dev/www/practice/trackerApp/trackerapp/.jshintrc",
		"/C/Users/Embair/dev/www/practice/trackerApp/trackerapp/spec/support/jasmine.json",
		"/C/Users/Embair/dev/www/practice/trackerApp/trackerapp/spec/http-listener.spec.js",
		"/C/Users/Embair/dev/www/practice/trackerApp/node_modules/redis/node_modules/redis-commands/commands.json",
		"/C/Users/Embair/dev/www/practice/trackerApp/node_modules/node-getopt/package.json",
		"/C/Users/Embair/dev/www/practice/trackerApp/.jshintrc",
		"/C/Users/Embair/dev/www/practice/trackerApp/trackerapp/README.md",
		"/C/Users/Embair/dev/www/practice/trackerApp/trackerapp/trackdata.txt",
		"/C/Users/Embair/dev/www/practice/trackerApp/spec/http-listener.spec.js",
		"/C/Users/Embair/dev/www/practice/trackerApp/node_modules/node-getopt/index.js",
		"/C/Users/Embair/dev/www/practice/trackerApp/benchmark.js",
		"/C/Users/Embair/dev/www/practice/counterApp/spec/worker.spec.js",
		"/C/Users/Embair/dev/www/practice/counterApp/worker.js",
		"/C/Users/Embair/dev/www/practice/counterApp/.jshintrc",
		"/C/Users/Embair/dev/www/practice/counterApp/package.json"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\Users\\Embair\\dev\\www\\konkr\\src\t",
			"C:\\Users\\Embair\\dev\\www\\konkr\\src",
			"C:\\Users\\Embair\\dev\\www\\konkr",
			"C:\\Users\\Embair\\dev\\www\\konkr\\src",
			"C:\\Users\\Embair\\dev\\www\\konkr",
			"C:\\Users\\Embair\\dev\\www\\konkrt",
			"C:\\Users\\Embair\\dev\\www\\practice\\twitterapp\\src",
			"C:\\Users\\Embair\\dev\\www\\practice\\twitterapp",
			"C:\\Users\\Embair\\dev\\www\\practice\\counterApp",
			"C:\\Users\\Embair\\dev\\www\\practice\\node_modules\\redis",
			"C:\\Users\\Embair\\dev\\www\\angrywords\\js",
			"C:\\Users\\Embair\\dev\\www\\angrywords\\js\\lib",
			"C:\\Users\\Embair\\dev\\www\\angrywords\\js\\lib\\*.js",
			"C:\\Users\\Embair\\dev\\www\\angrywords\\js",
			"<open folders>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			": null",
			"pipe",
			"fastBuild",
			"guard",
			"actionRejected",
			"BUY_UNIT",
			"Scheduled",
			"scheduled",
			"CHANGE_REGION_CAPITAL",
			"setHandler",
			"CHANGE_REGION_CAPITAL",
			"debugger",
			"Scheduled",
			"pickNewCapital",
			"execute",
			"actionResolved",
			"self",
			"this.",
			"resolve)",
			"resolve",
			"resolved",
			"resolved()",
			"resolved",
			"RESET_WORLD",
			".join",
			"ScheduledAction",
			"handler",
			"history =",
			"history",
			"onRegionLost",
			"setHandler",
			"resolve",
			"addHandler",
			"add",
			"CHANGE_REGION_CAPITAL",
			"KILL_TROOPS_IN_REGION",
			"addHandler",
			"plannedByCurrentAction",
			"setTreasuryOf",
			"CHANGE_REGION_CAPITAL",
			"addHandler",
			"runnningAction",
			"executing",
			"ScheduledAction",
			"[]",
			"checkForRegionMerging",
			"faction",
			"factionOf",
			"hexFaction",
			"region2",
			"growingRegion",
			"region",
			"onHexesChangedOwner",
			"game.",
			"ui",
			"onInput",
			"onInputUp",
			"LINE_HEIGHT",
			"HALF_LINE_HEIGHT",
			"convertToWorldCoordinates",
			"NullHex",
			"1",
			"0.5",
			"1",
			"dx",
			"drawBorderBetween",
			"setTopLeftBoundary",
			"drawBorderBetween",
			"convertToWorldCoordinates",
			"group",
			"gridOverlays",
			"overlay",
			"convertToWorld",
			"convertTo",
			"convertToWorldCoordinates",
			"this.regions.forEach",
			"_regions",
			"forEach",
			"} = converto",
			"const {x,y}",
			"convertToWorldCoordinates",
			"OrderedMap",
			"drawBorderBetween",
			"border",
			"pawns",
			"CHANGE_HEXES_REGION",
			"CONQUER",
			"hexPawn",
			"_pawns",
			"toDebugString",
			"exists()",
			"NullHex",
			"Buying new unit",
			"BUY_UNIT",
			"_pawns",
			"placeAt",
			"_pawns",
			"forEach",
			"pawns",
			"placeAt",
			"_pawns",
			"pawnAt",
			"hexPawn",
			"onDestroyer",
			"log.debug",
			"AVAIL",
			"AVAIL_UNITS",
			"formHex",
			"this",
			"PIVOT",
			"_findNewPivot",
			"remove(",
			"this._pivot =",
			"PIVOT",
			".exists(",
			"_findNewPivot",
			"availableUnits",
			"filter",
			"select",
			"select(",
			"GlobalRegionAI",
			"hexGroup",
			"CAPTURE_HEXES",
			"HEX",
			"getOwnerOf",
			"NullHex",
			"addAll",
			"super"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"resolve()",
			"RESET_HEXGRID",
			"scheduledByCurrentAction",
			"setHandler",
			"activeAction",
			"runnningAction",
			"null",
			"receivingRegion",
			"growingRegion",
			"null",
			"0.5",
			"0.25",
			"0.5",
			"const [x,y]",
			"pawn",
			"MultiRegionAI",
			"hexOrGroup",
			"CHANGE_HEXES_REGION",
			"add",
			"region",
			"id",
			"setTreasuryOf",
			"treasuryOf",
			"getRegionTreasury",
			"create",
			"UpdateEconomy",
			"spec",
			"tailoredContext",
			"context",
			"self",
			"",
			"addTask",
			"TaskTracker",
			"tasks",
			"JobsTracker",
			"jobs",
			"newState",
			"_constructors",
			"this.parentContainer",
			"hexSelectionProxy",
			"HexSelectionProxy",
			"game",
			"length",
			"",
			"surface.events",
			"_pawns",
			"Region",
			"",
			"pawns",
			"hexPawn",
			"",
			"OrderedMap",
			"name",
			"._resolved",
			"'ui",
			"'rules",
			"from 'lib/ui/Renderer'",
			"hexGroup",
			"HexGroup",
			"members",
			"_rowSize",
			"rowSize",
			"",
			"GroundTileSprite",
			"_hexesPerRow",
			"let",
			"\"",
			"Filter",
			"state.merge({",
			"state.merge ({",
			"statsModalVisible",
			"showStats",
			"filterValues",
			"filters",
			"tweets",
			"this.fetching",
			"",
			"this.props.tweets",
			"this.props.error",
			"this.props.fetching",
			"this.props.filters",
			")",
			"mockTweet(",
			"actualValue",
			"orderedList",
			"SortableTable",
			"sortIndicator",
			"tweetData.",
			"searchString",
			"renderResults",
			"mainView",
			"resultsBrowser",
			"user",
			"requestAuthToken",
			"TOKEN",
			"SERVICE_URL+'",
			"DB.COUNT",
			"assert.equal",
			"gracefulShutdown",
			"dumpStream",
			"dbClient",
			"DUMP_FILE",
			"console.log",
			"REDIS_PORT",
			"dbClient",
			"dumpStream",
			"ext",
			"worker.",
			"worker",
			"Worker",
			"server-worker.js",
			"ServerWorker",
			"'",
			"Worker",
			"self._dbClient",
			"srv",
			"this",
			"_storage",
			"dumpFile",
			"redisServerPort",
			"expectResponseFunc",
			"resetCounter",
			"'",
			"dbFields.COUNT",
			"dbFields.count",
			"dbField.count",
			"redis"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "webpack.config.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1762,
						"regions":
						{
						},
						"selection":
						[
							[
								769,
								769
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/rules/Actions.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1239,
						"regions":
						{
						},
						"selection":
						[
							[
								417,
								417
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 15.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/ai/RegionAI.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2050,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete": false,
							"auto_name": "class BasicAI {",
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/lib/hexgrid/HexGrid.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5982,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/lib/hexgrid/HexValuation.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1224,
						"regions":
						{
						},
						"selection":
						[
							[
								191,
								191
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "spec/support/jasmine.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 221,
						"regions":
						{
						},
						"selection":
						[
							[
								221,
								221
							]
						],
						"settings":
						{
							"auto_complete": true,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/Users/Embair/dev/www/tmp/es6-client-boilerplate/karma.config.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 910,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/Users/Embair/dev/www/tmp/es6-client-boilerplate/webpack.config.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 536,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/Users/Embair/dev/www/tmp/es6-client-boilerplate/package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1332,
						"regions":
						{
						},
						"selection":
						[
							[
								486,
								486
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "spec/HexValuation.spec.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1575,
						"regions":
						{
						},
						"selection":
						[
							[
								519,
								519
							]
						],
						"settings":
						{
							"auto_complete": false,
							"auto_name": "Valuations",
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/ai/methods/getAttackOpportunities.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 326,
						"regions":
						{
						},
						"selection":
						[
							[
								326,
								326
							]
						],
						"settings":
						{
							"auto_complete": false,
							"auto_name": "function rankAttackOpportunities(action) {",
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/ai/methods/offensivePlay.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 98,
						"regions":
						{
						},
						"selection":
						[
							[
								67,
								67
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5607,
						"regions":
						{
						},
						"selection":
						[
							[
								1010,
								1022
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 962,
						"regions":
						{
						},
						"selection":
						[
							[
								656,
								656
							]
						],
						"settings":
						{
							"auto_complete": true,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "static/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 471,
						"regions":
						{
						},
						"selection":
						[
							[
								148,
								148
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "src/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5294,
						"regions":
						{
						},
						"selection":
						[
							[
								189,
								189
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 16,
					"file": "src/lib/ActionsProvider.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7627,
						"regions":
						{
						},
						"selection":
						[
							[
								5917,
								5888
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2422.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "src/rules/Players.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3698,
						"regions":
						{
						},
						"selection":
						[
							[
								1193,
								1193
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": ".jshintrc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 622,
						"regions":
						{
						},
						"selection":
						[
							[
								622,
								622
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.480502462321,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "konkr.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"playe",
				"src\\rules\\Players.js"
			],
			[
				"package",
				"C:\\Users\\Embair\\dev\\www\\konkr\\package.json"
			],
			[
				"packag",
				"C:\\Users\\Embair\\dev\\www\\konkr\\package.json"
			],
			[
				"hex",
				"src\\lib\\hexgrid\\HexGrid.js"
			],
			[
				"regions",
				"src\\rules\\Regions.js"
			],
			[
				"region",
				"src\\rules\\Regions.js"
			],
			[
				"hexa",
				"src\\lib\\hexgrid\\Hexagon.js"
			],
			[
				"pawns.",
				"src\\rules\\Pawns.js"
			],
			[
				"actions",
				"src\\rules\\Actions.js"
			],
			[
				"econ",
				"src\\rules\\Economy.js"
			],
			[
				"play",
				"src\\states\\Play.js"
			],
			[
				"rendere",
				"src\\ui\\Renderer.js"
			],
			[
				"render",
				"src\\ui\\Renderer.js"
			],
			[
				"pawns",
				"src\\rules\\Pawns.js"
			],
			[
				"util.",
				"src\\lib\\util.js"
			],
			[
				"regios",
				"src\\rules\\Regions.js"
			],
			[
				"econom",
				"rules\\Economy.js"
			],
			[
				"hexgrid",
				"lib\\HexGrid.js"
			],
			[
				"index",
				"C:\\Users\\Embair\\dev\\www\\angrywords\\index.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 226.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
